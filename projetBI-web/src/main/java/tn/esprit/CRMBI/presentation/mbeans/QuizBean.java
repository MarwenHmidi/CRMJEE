package tn.esprit.CRMBI.presentation.mbeans;



import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;

@ManagedBean(name="quizBean")
@SessionScoped
public class QuizBean implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public static String favCoffee1;
	public static String favCoffee2;
	public static String favCoffee3;
	public static int result;
			
	public String getFavCoffee1() {
		return favCoffee1;
	}

	public void setFavCoffee1(String favCoffee1) {
		this.favCoffee1 = favCoffee1;
	}

	public String getFavCoffee2() {
		return favCoffee2;
	}

	public void setFavCoffee2(String favCoffee2) {
		this.favCoffee2 = favCoffee2;
	}

	public String getFavCoffee3() {
		return favCoffee3;
	}

	public void setFavCoffee3(String favCoffee3) {
		this.favCoffee3 = favCoffee3;
	}
	

	public static int getResult() {
		return result;
	}

	public static void setResult(int result) {
		QuizBean.result = result;
	}


	//Generated by Map
	private static Map<String,Object> coffee2Value;
	static{
		coffee2Value = new LinkedHashMap<String,Object>();
		coffee2Value.put("NO", "Reponse1"); //label, value
		coffee2Value.put("Do they ?", "Reponse2");
		coffee2Value.put("YES", "Reponse2");
	}
	
	public Map<String,Object> getFavCoffee2Value() {
		return coffee2Value;
	}
	
	//Generated by Object array
	public static class Coffee{
		public String coffeeLabel;
		public String coffeeValue;
		
		public Coffee(String coffeeLabel, String coffeeValue){
			this.coffeeLabel = coffeeLabel;
			this.coffeeValue = coffeeValue;
		}
		
		public String getCoffeeLabel(){
			return coffeeLabel;
		}
		
		public String getCoffeeValue(){
			return coffeeValue;
		}
		
	}
	
	public Coffee[] coffee3List;
	
	public Coffee[] getFavCoffee3Value() {
		
		coffee3List = new Coffee[3];
		coffee3List[0] = new Coffee("YES", "Reponse1");
		coffee3List[1] = new Coffee("NO", "Reponse2");
		coffee3List[2] = new Coffee("MAYBE ?", "Reponse3");
		
		return coffee3List;
	
	}
	
	public static int takeTest() {
		result = 0;
		 String[] questions = new String[3];
			questions[0]= new String(favCoffee1);
			questions[1]= new String(favCoffee2);
			questions[2]= new String(favCoffee3);
		System.out.println("-----------------------------------------------");
		for ( int i=0 ; i < questions.length ; i++) {
			

			if(questions[i].equals("Reponse1")){result++;}
			}
		System.out.println(result);
		return result ;
		
		}
	
}
